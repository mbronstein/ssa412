# Generated by Django 3.2.6 on 2021-09-25 23:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='MergeForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sysid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=90, unique=True)),
                ('uuid', models.CharField(max_length=50, unique=True)),
                ('mimetype', models.CharField(choices=[('pdf', 'pdf'), ('docx', 'docx'), ('txt', 'txt'), ('html', 'html'), ('xlsx', 'xlsx')], max_length=20)),
                ('category', models.CharField(choices=[('ss_form', 'ss form'), ('sso_letter', 'sso letter'), ('gen_letter', 'gen letter'), ('ins_letter', 'ins letter'), ('med_rec_req', 'med rec req'), ('lomb_form', 'lomb_form')], max_length=20, null=True)),
                ('template_type', models.CharField(choices=[('pdf', 'pdf'), ('reportlab', 'reportlab'), ('docx', 'docx')], max_length=20)),
                ('filename', models.CharField(blank=True, max_length=120, null=True)),
                ('repo', models.CharField(blank=True, default='mergeforms', max_length=10)),
                ('description', models.CharField(blank=True, max_length=90, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('text_body', models.TextField(blank=True, null=True)),
                ('blob_body', models.BinaryField(null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
    ]
